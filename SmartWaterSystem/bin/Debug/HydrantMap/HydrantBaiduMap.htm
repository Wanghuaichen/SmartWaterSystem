<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<style type="text/css">
	body, html,#allmap {width: 100%;height: 100%;overflow: hidden;margin:0;font-family:"微软雅黑";}
	</style>
	<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=21ad438ed3d5d5fc1e81985ad4199d71"></script>
	<title>消防栓Baidu地图</title>
</head>
<body>
	<div id="allmap"></div>
</body>
</html>
<script type="text/javascript">
	// 百度地图API功能
	var map = new BMap.Map("allmap");    // 创建Map实例
	map.centerAndZoom(new BMap.Point(112.973, 28.232), 12);  // 初始化地图,设置中心点坐标和地图级别
	//map.addControl(new BMap.MapTypeControl());   //添加地图类型控件
	map.setCurrentCity("长沙");          // 设置地图显示的城市 此项是必须设置的
	map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放

	function getBoundary() {
	    var bdary = new BMap.Boundary();
	    bdary.get("长沙市", function (rs) {       //获取行政区域
	        map.clearOverlays();        //清除地图覆盖物       
	        var count = rs.boundaries.length; //行政区域的点有多少个
	        if (count === 0) {
	            alert('未能获取当前输入行政区域');
	            return;
	        }
	        var pointArray = [];
	        for (var i = 0; i < count; i++) {
	            var ply = new BMap.Polygon(rs.boundaries[i], { strokeWeight: 2, strokeColor: "#ff0000" }); //建立多边形覆盖物
	            map.addOverlay(ply);  //添加覆盖物
	            ply.setFillOpacity(0); //设置透明度
	            pointArray = pointArray.concat(ply.getPath());
	        }
	        map.setViewport(pointArray);    //调整视野
	    });
	}

	var top_left_control = new BMap.ScaleControl({anchor:BMAP_ANCHOR_TOP_LEFT});  //左上角,添加比例尺
	var top_left_navigation = new BMap.NavigationControl();	//左上角,添加默认缩放平移控件
	var overViewOpen = new BMap.OverviewMapControl({ isOpen: true, anchor: BMAP_ANCHOR_BOTTOM_RIGHT });  //鹰眼控件
	map.addControl(top_left_control);
	map.addControl(top_left_navigation);
	map.addControl(overViewOpen);

	var hydrant_open = new BMap.Icon("open.gif", new BMap.Size(18, 26), { anchor: new BMap.Size(9, 13) });	//消防栓打开/开度图标
	var hydrant_close = new BMap.Icon("close.png", new BMap.Size(18, 26), { anchor: new BMap.Size(9, 13) });	//消防栓关闭图标
	var hydrant_impact = new BMap.Icon("impact.gif", new BMap.Size(18, 26), { anchor: new BMap.Size(9, 13) });	//消防栓撞击图标
	var hydrant_knockover = new BMap.Icon("knockover.gif", new BMap.Size(40, 27), { anchor: new BMap.Size(9, 13) });  //消防栓撞倒图标
    //菜单
	var menu = new BMap.ContextMenu();
	var txtMenuItem = [
        {
            text: '添加消防栓',
            callback: inputHydrantInfo
        },
		{
		    text: '放大',
		    callback: function () { map.zoomIn() }
		},
		{
		    text: '缩小',
		    callback: function () { map.zoomOut() }
		},
        {
            text: '取消放置',
            callback: cancleplace
        },
        {
            text: '刷新',
            callback: reload
        }
	];
	for (var i = 0; i < txtMenuItem.length; i++) {
	    menu.addItem(new BMap.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback, 50));
	}
	map.addContextMenu(menu);

    function reload()
    {
        window.location.reload();
    }
	function inputHydrantInfo(e)
	{
	    var args = window.showModalDialog("New.htm", null, "dialogWidth=350px;dialogHeight=120px");
	    if (args != undefined && typeof (args) != undefined && args.length == 2) {
	        addHydrant(args[0], args[1],e.lng,e.lat,"","none","none",true);
	    }
	}
	function addHydrant(id,addr,lng,lat,state,pressvalue,openangle,isinsert)
	{
	    if (isinsert && existHydrant(id))
	    {
	        alert("消防栓["+id+"]已经存在!");
	        return;
	    }
	    var marker;
		switch(state)
		{
			case "open":
			case "openangle":
				marker = new BMap.Marker(new BMap.Point(lng,lat),{icon:hydrant_open});
				break;
			case "close":
				marker = new BMap.Marker(new BMap.Point(lng,lat),{icon:hydrant_close});
				break;
			case "impact":
				marker = new BMap.Marker(new BMap.Point(lng,lat),{icon:hydrant_impact});
				break;
			case "knockover":
				marker = new BMap.Marker(new BMap.Point(lng,lat),{icon:hydrant_knockover});
				break;
			default:
				marker = new BMap.Marker(new BMap.Point(lng,lat),{icon:hydrant_close});
				break;
		}
	    //marker.enableDragging();
	    map.addOverlay(marker);
	    //marker.setAnimation(BMAP_ANIMATION_BOUNCE);
		var label= "编号:" + id;
		if(pressvalue !="none")
			label+=","+pressvalue+"Mpa";
		if(openangle!="none")
			label+=","+openangle;
		marker.setLabel(new BMap.Label(label, { offset: new BMap.Size(25, -10) }));
		marker.enableDragging();
	    marker.addEventListener("dragend", dragMarker );

	    //marker菜单
	    var menu_mark = new BMap.ContextMenu();
	    menu_mark.addItem(new BMap.MenuItem("删除", delMarker, 20));
		menu_mark.addItem(new BMap.MenuItem("取消报警",unAlarm,20));
	    //menu_mark.addItem(new BMap.MenuItem("修改", modifyMarker, 20));
	    marker.addContextMenu(menu_mark);   //添加右键菜单
	    marker.addEventListener("click", getDetail);
	    if (isinsert == true)
	        window.external.addHydrantMarker(id, addr, lng, lat);
	}
	function getDetail(e)
	{
	    window.external.showHydrantDetail(getidbylabel(e.target.getLabel().content));
	}
	function unAlarm(e,ee,marker)
	{
	    window.external.HydrantunAlarm(getidbylabel(marker.getLabel().content));
	    //marker.setIcon(hydrant_close);
	    requireLoadMarkers();
	}
	function cancleplace() {
	    setcursoricon(0, false);
	}
	function getidbylabel(content)
	{
		var strs = content.split(",");
		return strs[0].replace('编号:', '');
	}
	function existHydrant(id)
	{
	    var allOverlay = map.getOverlays();
	    for (var i = 0; i < allOverlay.length; i++) {
	        if (allOverlay[i].zc != undefined && allOverlay[i].getLabel() != null) {
	            if (getidbylabel(allOverlay[i].getLabel().content) == id) {
	                return true;
	            }
	        }
	    }
	    return false;
	}
	function getHydrant(id) {
	    var allOverlay = map.getOverlays();
	    for (var i = 0; i < allOverlay.length; i++) {
	        if (allOverlay[i].zc != undefined && allOverlay[i].getLabel() != null) {
	            if (getidbylabel(allOverlay[i].getLabel().content) == id) {
	                return allOverlay[i];
	            }
	        }
	    }
	    return null;
	}
	function delMarker(e, ee, marker) {
	    var result = confirm('是否删除！');
	    if (result) {
	        window.external.delHydrantMarker(getidbylabel(marker.getLabel().content));
	        marker.remove();
	    }
	}
	function dragMarker(e) {
	    if (confirm("确定移动吗?")) {
	        var id = getidbylabel(e.target.getLabel().content);
	        if (id != undefined && id != null && id != "") {
	            window.external.modifyHydrantCoordinate(id, e.point.lng, e.point.lat);
	        }
	    }
	    else
	        reload();
	}
	function requireLoadMarkers() {
	    window.external.getHydrantMarkers();
	}
	function loadMarkers(jsonmarkers) {
	    map.clearOverlays();
	    var allOverlay = map.getOverlays();
	    for (var i = 0; i < allOverlay.length; i++) {
	        allOverlay[i].remove();
	    }
	    if (jsonmarkers != undefined && jsonmarkers != null && jsonmarkers != "") {
	        var markers = eval("data=" + jsonmarkers);
            for(var i = 0; i < markers.length; i++) {
                addHydrant(markers[i].id, markers[i].addr, markers[i].lng, markers[i].lat, markers[i].state,markers[i].pressvalue,markers[i].openangle,false);
            }
	    }
	}


	requireLoadMarkers();
	setInterval("requireLoadMarkers()",1*60*1000);   //每隔一段时间刷新状态
</script>
